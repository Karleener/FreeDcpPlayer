/*****************************************************************************
 * Copyright (C) 2022 Karleener
 *
 * Author:  Karleener
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3.0 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 *****************************************************************************/

#ifndef __Run__
#define __Run__

/**
@file
Subclass of RunDlg, which is generated by wxFormBuilder.
*/

#include "RunDcpDlg.h"
#include <string>
#include <fstream>
#include <iostream>
#include <vector>
using namespace std;

#ifndef MAX_PATH
#define MAX_PATH 512
#endif
//// end generated include

/** Implementing RunDlg */
class Run : public RunDlg
{
	protected:
		// Handlers for RunDlg events.
		void RunDcpPlayerDlgOnInitDialog( wxInitDialogEvent& event );
		void m_dirPicker2OnDirChanged( wxFileDirPickerEvent& event );
		void m_choiceAudioOnChoice( wxCommandEvent& event );
		void m_choiceDisplayOnChoice( wxCommandEvent& event );
		void m_choiceCPLOnChoice( wxCommandEvent& event );

		void m_checkBox_full_screenOnCheckBox( wxCommandEvent& event );
		void m_checkBox_ProgressOnCheckBox( wxCommandEvent& event );
		void m_checkBox_logOnCheckBox( wxCommandEvent& event );
		void m_checkBox_51OnCheckBox( wxCommandEvent& event );
		void m_checkBox_HalfOnCheckBox(wxCommandEvent& event);
		void m_checkBox_playOnCheckBox(wxCommandEvent& event);
		
		void m_button_runOnButtonClick( wxCommandEvent& event );
		void m_button_helpOnButtonClick(wxCommandEvent& event);
		void m_button_quitOnButtonClick( wxCommandEvent& event );
	public:
		/** Constructor */
		Run( wxWindow* parent );

		void UpdateCommand();
		void UpdateData(bool sens);
		bool TransferDataToWindow();
		bool TransferDataFromWindow();

		string ChoosenDir;
		char cwd[MAX_PATH];
		string InitialDir;

		wxString m_MyDir;
		wxString m_Com;

		bool m_Back;
		bool m_Log;
		bool m_ProgressBar;
		bool m_Output51;
		bool m_HalfResolution;
		bool m_Play;

		bool m_IsPlaying;

		vector<wxString> AudioDevice;
		vector<wxString> DisplayDevice;


		std::vector<char*> argv;
		std::vector<std::string> arguments;
	//// end generated class members

};

#endif // __Run__
